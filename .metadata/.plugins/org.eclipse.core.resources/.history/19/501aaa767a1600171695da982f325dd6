package br.com.fiap.resource;

import java.util.List;

import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;
import javax.ws.rs.core.UriInfo;

import br.com.fiap.bo.AtletaBO;
import br.com.fiap.entity.Atleta;
import br.com.fiap.exception.DBException;
import br.com.fiap.exception.IdNotFoundException;

@Path("/atleta")
public class AtletaResource {
	
	private AtletaBO bo = new AtletaBO();
	
	@GET
	@Path("/{id}")
	@Produces(MediaType.APPLICATION_JSON)
	public Atleta buscar(@PathParam("id") int codigo){
		Atleta atleta  = bo.pesquisar(codigo);
		return atleta;
	}
	
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public Response listar(){
		List<Atleta> atletas = bo.listar();
		return Response.ok().entity(atletas).header("Access-Control-Allow-Origin", "*")
				.header("Access-Control-Allow-Methods", "GET, POST, DELETE, PUT")
	}
	
	
	@POST
	@Produces(MediaType.APPLICATION_JSON)
	public Response cadastrar(Atleta atleta, @Context UriInfo uriInfo){
		try {
			bo.cadastrar(atleta);
		} catch (DBException e) {
			e.printStackTrace();
		}
		UriBuilder builder = uriInfo.getAbsolutePathBuilder();
		builder.path(Integer.toString(atleta.getCodigo()));
		return Response.created(builder.build()).build();
	}
	
	@PUT
	@Path("/{id}")
	@Produces(MediaType.APPLICATION_JSON)
	public Response atualizar(Atleta atleta, @PathParam("id") int codigo){
		atleta.setCodigo(codigo);
		try {
			bo.alterar(atleta);
		} catch (DBException e) {
			e.printStackTrace();
		}
		return Response.ok().build();
		
	}
	
	@DELETE
	@Path("/{id}")
	public void remover(@PathParam("id") int codigo){
		try {
			bo.remover(codigo);
		} catch (IdNotFoundException | DBException e) {
			e.printStackTrace();
		}
	}
	
}
